# Design System Rules for Figma Integration

## SwiftUI Design Token Mapping

### Color Tokens
When generating code from Figma designs, map colors as follows:

**Semantic Colors (use Color assets)**:
- Background colors → `Color("BackgroundColor")`
- Primary text → `Color("PrimaryTextColor")`
- Secondary text → `Color("SecondaryTextColor")`
- Card backgrounds → `Color("CardBackgroundColor")`
- Accent colors → `Color("AccentColor")`

**Specific RGB Values (for precise design requirements)**:
- `#1A1A1A` → `Color(red: 0.102, green: 0.102, blue: 0.102)`
- `#52525B` → `Color(red: 0.322, green: 0.322, blue: 0.357)`
- `#F4F4F5` → `Color(red: 0.957, green: 0.957, blue: 0.961)`

### Typography Tokens
**Font Weights**:
- Regular → `.regular`
- Medium → `.medium`
- Semibold → `.semibold`
- Bold → `.bold`

**Font Sizes**:
- 10px → `size: 10` (metadata, small labels)
- 12px → `size: 12` (buttons, search)
- 14px → `size: 14` (body text)
- 15px → `size: 15` (search results)
- 16px → `size: 16` (icons, medium text)
- 17px → `size: 17` (card titles)

**Usage Pattern**:
```swift
.font(.system(size: 17, weight: .medium))
```

### Spacing Tokens
**Padding Values**:
- 4px → `4` (minimal spacing)
- 6px → `6` (small spacing)
- 8px → `8` (standard spacing)
- 12px → `12` (medium spacing)
- 16px → `16` (large spacing)
- 18px → `18` (extra large spacing)
- 24px → `24` (section spacing)
- 60px → `60` (page margins)

### Corner Radius Tokens
**Values**:
- 4px → `4` (small elements)
- 20px → `20` (search bar collapsed)
- 24px → `24` (cards, search bar expanded)
- Full rounded → `Capsule()` (buttons, pills)

## Component Generation Rules

### Existing Components to Reuse
1. **NoteCard**: For any card-like components
2. **SearchBar**: For search input patterns
3. **Button**: For interactive elements

### Component Structure Pattern
```swift
struct GeneratedComponent: View {
    // Props from Figma
    let title: String
    let isActive: Bool
    
    var body: some View {
        VStack(spacing: 12) {
            // Content using design tokens
            Text(title)
                .font(.system(size: 17, weight: .medium))
                .foregroundColor(Color("PrimaryTextColor"))
        }
        .padding(.all, 12)
        .background(Color.white)
        .clipShape(RoundedRectangle(cornerRadius: 24))
    }
}
```

### Shadow Pattern
```swift
.shadow(color: Color.black.opacity(0.02), radius: 9.5, x: 0, y: 9)
.shadow(color: Color.black.opacity(0.02), radius: 17.5, x: 0, y: 35)
.shadow(color: Color.black.opacity(0.01), radius: 23.5, x: 0, y: 78)
```

### Animation Pattern
```swift
withAnimation(.bouncy(duration: 0.6)) {
    // State changes
}
.animation(.bouncy(duration: 0.6), value: stateVariable)
```

## Asset Integration Rules

### Image Assets
- **SVG Files**: Export as SVG, place in `Noty/Ressources/`
- **PNG Files**: Export as PNG, place in `Noty/Ressources/`
- **Usage**: `Image("asset-name").resizable().frame(width: X, height: Y)`

### Icon Assets
- **SF Symbols**: Use system names (e.g., "magnifyingglass", "plus.circle.fill")
- **Custom Icons**: Export as SVG, reference by filename
- **Sizes**: 10, 12, 14, 16, 18, 20, 24px

### Color Assets
- **Create Color Sets**: In Assets.xcassets for semantic colors
- **Light/Dark Mode**: Support both appearances
- **Usage**: `Color("ColorName")`

## Layout Rules

### Grid System
```swift
LazyVGrid(columns: Array(repeating: GridItem(.fixed(222), spacing: 12), count: 4), spacing: 12)
```

### Responsive Design
- **Fixed Sizes**: Use specific pixel values for desktop app
- **Minimum Window**: `frame(minWidth: 1109, minHeight: 782)`
- **Safe Areas**: Use `.ignoresSafeArea()` for full-screen backgrounds

## Code Generation Guidelines

### When Generating from Figma:
1. **Analyze Design**: Identify reusable patterns
2. **Map Tokens**: Convert Figma values to SwiftUI tokens
3. **Reuse Components**: Use existing components when possible
4. **Create New**: Only create new components for unique patterns
5. **Follow Structure**: Use established file organization
6. **Add Comments**: Document design decisions and token usage

### File Organization:
- **Components**: Place in `Noty/Views/Components/`
- **Screens**: Place in `Noty/Views/Screens/`
- **Assets**: Place in `Noty/Ressources/`
- **Models**: Place in `Noty/Models/`

### Naming Conventions:
- **Components**: PascalCase (e.g., `NoteCard`)
- **Assets**: kebab-case (e.g., `note-card-thumbnail`)
- **Colors**: PascalCase (e.g., `BackgroundColor`)
- **Functions**: camelCase (e.g., `searchResultRow`)

This ensures consistent, maintainable code generation from Figma designs while following the established design system patterns.
description:
globs:
alwaysApply: false
---
