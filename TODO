
# Noty Development TODO

## Liquid Glass Implementation
- [ ] Convert remaining Figma components to liquid glass styling
- [ ] Apply .glassEffect(.regular.interactive()) to all interactive elements
- [ ] Ensure hover states with scaleEffect and dynamic shadows
- [ ] Implement GlassEffectContainer for complex animations
- [ ] Update app icons with unified glass layers using Icon Composer

## UI Components & Features
- [x] Search button with liquid glass styling and hover effects
- [x] Context menu for note cards (Pin, Move to Folder, Delete)
- [x] Three dots menu button with proper glass effects
- [ ] Search functionality implementation
- [ ] Context menu actions implementation
- [ ] Note editing interface with liquid glass modals
- [ ] To-do list functionality with liquid glass styling
- [ ] Memo/notes creation and editing interface
- [ ] Tab system with liquid glass tab bars
- [ ] Enhanced card layouts with advanced glass effects
- [ ] Canvas view for visual note organization
- [ ] Image upload and management with glass modals
- [ ] Folder management system with renaming/editing capabilities
- [ ] Tag creation and editing interface
- [ ] Multiple view modes with smooth liquid glass transitions

## Core Functionality
- [ ] Note CRUD operations
- [ ] Search and filtering logic
- [ ] Advanced search with filtering and ML suggestions
- [ ] Note pinning system
- [ ] Folder organization backend
- [ ] Tag management backend with color-coding and hashtags
- [ ] Data persistence (Core Data/SwiftData)
- [ ] Note synchronization
- [ ] Dictation features using Speech framework
- [ ] Calendar integration and scheduling
- [ ] Markdown support with live preview
- [ ] File upload capabilities with drag-and-drop

## Design System Compliance
- [x] Consistent liquid glass control layers
- [x] No glass-on-glass violations
- [x] Minimal color usage on glass surfaces
- [x] Concentricity with device hardware alignment
- [ ] Complete typography system implementation
- [ ] Consistent spacing and layout grid
- [ ] SF Symbols icon system
- [ ] Unified animation patterns (.bouncy duration: 0.3)

## Performance & Quality Assurance
- [ ] Accessibility compliance (Reduced Transparency, Increased Contrast, Reduced Motion)
- [ ] Performance optimization for glass effects
- [ ] Memory management for graphics resources
- [ ] Error handling and edge cases
- [ ] Unit tests for core functionality
- [ ] Integration tests for UI components

## Advanced Features (Future)
- [ ] AI-powered features using Foundation Models Framework
- [ ] Writing Tools integration for note enhancement
- [ ] Image Playground integration
- [ ] Advanced search with ML suggestions
- [ ] Collaboration features with SharePlay
- [ ] Export functionality (PDF, Markdown, etc.)
- [ ] Keyboard shortcuts and accessibility
- [ ] Cross-platform synchronization

## Technical Architecture
- [ ] SwiftUI navigation system
- [ ] State management architecture
- [ ] Data layer abstraction
- [ ] Networking layer for sync
- [ ] Caching strategy
- [ ] Background processing

---
*Following Apple's Liquid Glass Design Language (WWDC25)*
*SDK: iOS 26+ / macOS Tahoe+ for .glassEffect() APIs*
